[{"content":"題目 原題目 1 2 3 4 5 6 + 英文: - Given the array of integers nums, you will choose two different indices i and j of that array. Return the maximum value of (nums[i]-1)*(nums[j]-1). + 中文: - 給定一個整數陣列 nums，請你選擇陣列中兩個不同的指數。回傳 (nums[i]-1)*(nums[j]-1) 的最大值。 - 請回傳 nums 的 累積和。 測資一 1 2 3 + 輸入: nums = [3,4,5,2] + 輸出: 12 - 解釋: 如果指數 i = 1 和 j = 3(索引值從0開始)，可以得到最大值，(nums[1]-1)*(nums[2]-1) = (4-1)*(5-1) = 3*4 = 12 。 測資二 1 2 3 + 輸入: nums = [1,5,4,5] + 輸出: 16 - 解釋: 如果指數 i = 1 和 j = 3(索引值從0開始)，可以得到最大值，(5-1)*(5-1) = 16 。 測資三 1 2 + 輸入: nums = [3,7] + 輸出: 12 解題思路 再這題當中，分成兩個部分：\n要找到最大值的索引 i 和第二大值的索引 j。 代入公式 (nums[1]-1)*(nums[2]-1)，並回傳結果。 Java 思路 先排序陣列，即可取得最大值和最小值。套上公式即可。\nPython 思路 跟Java解題思路是一樣的。\n答案 此題答案以 Java 解！\n1 2 3 4 5 6 7 8 9 10 class Solution { public int maxProduct(int[] nums) { // 先排序陣列 Arrays.sort(nums); // 代入公式並回傳 return (nums[nums.length-1] - 1) * (nums[nums.length-2] - 1); } } ","date":"2022-10-05T00:00:00Z","permalink":"https://blog.tershi.com/p/maximum-product-of-two-elements-in-an-array/","title":"1464. 一個陣列中兩個元素的最大乘積"},{"content":"題目 原題目 1 2 3 4 5 6 7 + 英文: - Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]). - Return the running sum of nums. + 中文: - 給定一個陣列，陣列「累積和」的計算公式為「runningSum[i] = sum(nums[0]…nums[i]) 」。 - 請回傳 nums 的 累積和。 測資一 1 2 3 + 輸入: nums = [1,2,3,4] + 輸出: [1,3,6,10] - 解釋: 累積和計算過程為 [1, 1+2, 1+2+3, 1+2+3+4] 。 測資二 1 2 3 + 輸入: nums = [1,1,1,1,1] + 輸出: [1,2,3,4,5] - 解釋: 累積和計算過程為 [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1] 。 解題思路 再這題當中，i項為i-1項+原i項之和，可以用迴圈去跑，要注意的是 i 為 0 時不需要加，也就是第一項不用加前項，否則會出現索引值找不到的錯誤。\nJava 思路 使用 nums.length取得陣列長度，然後開始慢慢加即可。\nPython 思路 跟Java解題思路是一樣的。\n答案 此題答案以 Python 解！\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution(object): def runningSum(self, nums): \u0026#34;\u0026#34;\u0026#34; :type nums: List[int] :rtype: List[int] \u0026#34;\u0026#34;\u0026#34; # 先宣告一個空串列 lst = [] # i 從 0 跑至 nums的長度 for i in range(len(nums)): # 第一項 if i == 0: lst.append(nums[i]) #第二項開始 else: lst.append(nums[i] + lst[i-1]) return lst ","date":"2022-10-05T00:00:00Z","permalink":"https://blog.tershi.com/p/running-sum-of-1d-array/","title":"1480. 一維陣列累積和"},{"content":"前言 大家常常在存放多筆資料的時候，會使用到一個資料型態叫做「陣列」，針對不同的語言有相似的資料型態，以Python來說，只有串列，但其他大部分語言都是有Array，本篇將細分介紹陣列及串列，以及將串列拆分三種來比較，方便大家理解，我會使用 Java 語法來介紹。\nArray(陣列) 當我們要儲存多筆資料的時候，常常會使用到陣列，陣列有一個很重要的特性，跟串列不同的是，陣列是需要先定義資料大小的，也是採用固定空間分配的概念來存放陣列。\n如下圖，陣列需要先定義好一個大小 n，由於索引值也會跟著定好，因此在尋找的時候就會比較快速。但是如果要插入一個新的元素，就會整個陣列都影響，執行效率會較久。\n建立陣列 建立陣列非常簡單，new為建立一個新的 Array 物件。\n1 2 3 // 建立大小為 20 的陣列 int[] arr = new int[20]; int[] arr2 = new int[20]; 使用陣列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // 設定 arr 第 0 位置為 50 arr[0] = 50; // 設定 arr 第 1 位置為 20 arr[1] = 20; // 會報錯，原因是 java在一開始宣告陣列的時候 // 型別就是 int，因此無法使用 String。 arr[1] = \u0026#34;Hi\u0026#34;; // 會輸出 50 System.out.print(arr[0]); // 將第 1 個位置和 第0個位置加起來，傳入第二位置 arr[2] = arr[1] + arr[0] // 後項 + 此項 = 下一項 for (int i = 2; i\u0026lt; arr.length; i++) arr[i] = arr[i-1] + arr[i-2]; 多維陣列 多維陣列的觀念也非常簡單，也就是陣列中的陣列。\n1 2 3 4 5 6 7 // 建立一個十項一維及十項二維的陣列 // 此時空間大小維 10*10 = 100 int[][] arr3 = new int[10][10]; arr3[2][3] = 10; // 會印出 10 System.out.print(arr3[2][3]); List Class List (串列) ArrayList ArrayList 可以分配動態空間大小，也有提供許多方法可以使用，也可以建立二維 ArrayList。\n建立陣列 1 2 3 4 5 6 7 8 9 10 11 // 需要先將 ArrayList 類別匯入進來 import java.util.ArrayList; // 建立多個不同型別的陣列 ArrayList\u0026lt;Integer\u0026gt; arr1 = new ArrayList\u0026lt;Integer\u0026gt;(); ArrayList\u0026lt;Double\u0026gt; arr2 = new ArrayList\u0026lt;Double\u0026gt;(); ArrayList\u0026lt;Float\u0026gt; arr3 = new ArrayList\u0026lt;Float\u0026gt;(); ArrayList\u0026lt;String\u0026gt; arr4 = new ArrayList\u0026lt;String\u0026gt;(); ArrayList\u0026lt;Boolean\u0026gt; arr5 = new ArrayList\u0026lt;Boolean\u0026gt;(); // ArrayList\u0026lt;Class\u0026gt; arr1 = new ArrayList(); ArrayList arr6 = new ArrayList(); 使用陣列 多維陣列 LinkedList (鏈結串列) 三種串列比較 陣列、串列比較 ","date":"2022-10-05T00:00:00Z","permalink":"https://blog.tershi.com/p/difference-between-array-and-list/","title":"陣列、串列 的差別。"},{"content":"前言 ","date":"2022-10-05T00:00:00Z","permalink":"https://blog.tershi.com/p/difference-between-array-and-list/","title":"陣列、串列 的差別。"},{"content":"題目 原題目 1 2 3 4 5 6 7 + 英文: - Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. - The overall run time complexity should be O(log (m+n)). + 中文: - 給定兩個已排序過的陣列 num1 和 num2，大小分別為 m 和 n，回傳兩個已排序陣列的中間值。 - 總執行時間複雜度為 O(log (m+n))。 測資一 1 2 3 + 輸入: nums1 = [1,3], nums2 = [2] + 輸出: 2.00000 - 解釋: 合併後陣列 = [1,2,3] 中間值為 2. 測資二 1 2 3 + 輸入: nums1 = [1,2], nums2 = [3,4] + 輸出: 2.50000 - 解釋: 合併後陣列 = [1,2,3,4] 中間值為 (2 + 3) / 2 = 2.5. 解題思路 在這題當中，num1 及 num2 皆為陣列，需要把這兩個東西合再一起，以測資一來說，nums1 + nums2 就會是 [1, 3, 2]，接下來因為要取中間值所以需要排序，排序過後會是[1, 2, 3]，中間值即為2。\n再以測資二為例，nums1 + nums2 就會是 [1, 2, 3, 4]，排序過後仍然一樣，中間值則為(2+3)/2=2.5，答案即為2.5\nJava 思路 因為函數傳進了兩個陣列，因此在宣告一個整數陣列，將兩個陣列放置在一起，接下來再使用sort()方法將陣列排序即可開始寫if-else取值。\nPython 思路 跟Java解題思路是一樣的，先宣告一個陣列 lst，將num1 及 num2 放入 lst，再開始if-else解即可。\n答案 此題答案以 Python 解！\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class Solution(object): def findMedianSortedArrays(self, nums1, nums2): \u0026#34;\u0026#34;\u0026#34; :type nums1: List[int] :type nums2: List[int] :rtype: float \u0026#34;\u0026#34;\u0026#34; # 先宣告一個lst 將 num1 放入 lst = nums1 # 將 num2 每筆資料都放入 i 遍歷跑 for i in nums2: # 將 nums2 放入 lst，即達成 lst = num1 + num2 lst.append(i) # 將 lst 進行排序 lst = sorted(lst) # 宣告答案值為0 ans = 0 # 如果 lst的數量為偶數 if len(lst) % 2 == 0: # 則取 中間兩位之平均值，回寫入ans ans = float(lst[len(lst)/2-1] + lst[len(lst)/2])/2 else: # 否則取中間值 ans = lst[len(lst)//2] # 回傳答案 return ans ","date":"2022-10-04T00:00:00Z","permalink":"https://blog.tershi.com/p/median-of-two-sorted-arrays/","title":"4. 尋找兩個已排序陣列的中間值"},{"content":"題目 原題目 1 2 3 4 5 6 7 + 英文: - You are given an integer array nums where the largest integer is unique. - Determine whether the largest element in the array is at least twice as much as every other number in the array. If it is, return the index of the largest element, or return -1 otherwise. + 中文: - 給定一個整數陣列 nums，其中有一個最大整數是唯一的 - 檢查陣列之最大元素是否至少是陣列中其他每個數字的兩倍。如果是，則回傳最大元素之索引，否則回傳 -1。 測資一 1 2 3 + 輸入: nums = [3,6,1,0] + 輸出: 1 - 解釋: 6 是最大的整數。對於其他陣列來說，6至少是其他元素的兩倍。6的索引值是1，所以回傳1。 測資二 1 2 3 + 輸入: nums = [1,2,3,4] + 輸出: -1 - 解釋: 4 小於三的兩倍，所以回傳 -1。 解題思路 在這題當中，nums 為陣列，需要先找出最大的值，遍歷搜尋比他兩倍大的數字，如果有比他大的數字，就回傳-1，否則回傳索引值。以測資一來說，6為最大的數字，遍歷搜尋比6大的數字，3*2小於等於6，因此回傳索引值1。\n再以測資二為例，4為最大數，搜尋其他數字的兩倍比4大的數字，3*2\u0026gt;4，明顯比他大，所以回傳-1。\nJava 思路 先定義最大數字，然後遍歷搜尋，可以用演算法，也可以用一般方式來解。\nPython 思路 跟Java解題思路是一樣的。\n答案 此題答案以 Python 解！\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution(object): def dominantIndex(self, nums): \u0026#34;\u0026#34;\u0026#34; :type nums: List[int] :rtype: int \u0026#34;\u0026#34;\u0026#34; # 先宣告計數器為0 counter = 0 # 將 nums 的值以 i 的形式遍歷跑 for i in nums: # 如果 每個值乘二 大於 最大值 if i*2 \u0026gt; max(nums): # 計數器+1 counter += 1 # 如果沒有搜尋到 if counter == 0: # 回傳 -1 return -1 else: # 否則回傳最大值的索引值 return nums.index(max(nums)) ","date":"2022-10-04T00:00:00Z","permalink":"https://blog.tershi.com/p/largest-number-at-least-twice-of-others/","title":"747. 至少是其他數字兩倍的最大數"},{"content":"前言 相信大家都希望在使用 Hugo 的時候都非常痛恨沒有留言區吧，作為一個正在學習的學生，免不了跟大家作技術交流，此時沒有留言版，會顯得非常怪和痛苦。\n註冊 Disqus 帳號 首先到 Disqus 網站 註冊一個帳號，先點擊底下的\u0026quot;I want to install Disqus on my site\u0026quot;。\n然後填入 \u0026ldquo;Website Name\u0026rdquo;，此時要記住這個Name，會對應到後面的 Short Name。Category隨意選。\n接著點選最基本免費功能即可，一路下去跳到第三步驟。\n到了第三個步驟，請確認你的 Website Name 是否是 Short Name，這個在等等的 config.yaml設定檔案會用到。\n設定 config 檔 直接設定 Hugo config.yaml 在你的 config.yaml 中的 disqusShortname 輸入你的shortName。\n在你的 config.yaml 中的 disqusjs: shortname: 中，將你的 ShortName 填入。\n(非Hugo)將 Disqus 程式碼嵌入Javascript 將第二步的程式碼貼入到你的網站，即可。請注意！紅色方框框起來的是你的ShortName，必須更改。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;div id=\u0026#34;disqus_thread\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page\u0026#39;s canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page\u0026#39;s unique identifier variable }; */ (function() { // DON\u0026#39;T EDIT BELOW THIS LINE var d = document, s = d.createElement(\u0026#39;script\u0026#39;); s.src = \u0026#39;https://你的ShortName.disqus.com/embed.js\u0026#39;; s.setAttribute(\u0026#39;data-timestamp\u0026#39;, +new Date()); (d.head || d.body).appendChild(s); })(); \u0026lt;/script\u0026gt; \u0026lt;noscript\u0026gt;Please enable JavaScript to view the \u0026lt;a href=\u0026#34;https://disqus.com/?ref_noscript\u0026#34;\u0026gt;comments powered by Disqus.\u0026lt;/a\u0026gt;\u0026lt;/noscript\u0026gt; 將留言區更改為正體中文 進入到後台，右上角的Admin，找到General，找到Language，並更改為Chinese(Taiwan)，即有中文出現。\n成果 此時會在你的網站或是部落格底下出現你的留言區，如果出現留言區代表你設定成功，現在的 Disqus 仍然是中英文夾雜的，有待官方翻譯完成。\n結尾 Disqus 在各大網站上都會看到，是一個很好用的聊天室工具，其提供了強大的功能，可以讓使用者在裡面交流、發問。 在靜態網頁中加入留言區是個不錯的選擇，對於讀者有問題發問時，就會有留言區可以發問。 如果有任何問題也可以在底下發問喔，如果我有看到的話，或是通過我的聯絡方式聯絡我也是可以，我的聯絡方式都會在我的網站上。希望這篇教學會幫助大家。\n","date":"2022-10-02T00:00:00Z","permalink":"https://blog.tershi.com/p/disqusinstallation/","title":"Disqus + Hugo 讓你的網頁/部落格加上留言板功能"},{"content":"前言 在前端 javascript 框架中，有許多選擇，有 React.JS、Vue.js、Three.Js\u0026hellip;等等，在這些框架中，每個框架都有各自獨特的功能，以便我們在網頁開發的時候更快速更順手。多虧了這些框架，在前端開發更為方便，有了框架，再也不是死板困難的Javascript。\nVue.JS 介紹 Vue，是一款基於前端視圖開發的 javascript 漸進式框架。\nVue.js 提供 API，可以在資料和標籤進行綁定，也可以實作成一個又一個的元件(Componenets)。Vue.js 也提供了幾個生命週期讓使用者操作。同時 Vue.js 官方文件也寫得淺顯易懂，相比 JQuery 或其他官方文件，是難以理解的。\nVue.js 的發展歷史 Vue.js 在 2013年 被 作者 尤雨溪 開發而成。\n尤雨溪 本身在 Google 工作，先前開發 AngularJS，看到了許多AngularJS的缺點及優點，開發出了 Vue.JS，並在 2014年02月發布了 Vue.JS 版本0.8。\n第一支程式 Hello World 首先先在 index.html 的 head 中匯入 vue.js的開發版本。\n1 \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/vue/3.0.2/vue.global.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 然後在 body 中建立 app\n1 2 3 \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt; {{ msg }} \u0026lt;/div\u0026gt; 並在底下建立一個 javascript\n1 2 3 4 5 6 7 8 9 10 \u0026lt;script\u0026gt; var app = { data(){ return { msg: \u0026#39;Hello_World\u0026#39; } } } Vue.createApp(app).mount(\u0026#39;#app\u0026#39;); \u0026lt;/script\u0026gt; 此時已經可以執行，並在畫面中印出 \u0026ldquo;Hello_World\u0026rdquo; 字樣，那麼第一個網頁就算是成功拉。\nVue 會將資料連結至 DOM，這種資料連結是雙向，因此我們稱為雙向綁定。\n結尾 看到這邊，相信聰明伶俐的你已經完成了第一個使用 Vue.JS 框架寫出的網頁，之後我們在這篇一起繼續學習吧！！！\n","date":"2022-10-02T00:00:00Z","permalink":"https://blog.tershi.com/p/vue.jslearn1/","title":"Vue.JS 學習筆記一"},{"content":"前言 相信有在使用 Github 的朋友們，應該知道 Github Page，通過這個東西，我們可以在上面運行我們的靜態網頁，做出自己想要的個人網站或是部落格，但因為是靜態網頁，所以不支援所有動態操作，例如：登入、PHP處理\u0026hellip;。因此在本篇，我將為大家介紹 Hugo 這酷東西。\n安裝 Windows Step 1. 如果你是 Windows 使用者，請去 Hugo Repo 下載 Windows 版本的Hugo，並且解壓至 C:\\\\hugo\\bin。\nStep 2. 請到 設定/環境變數 中，選擇「系統」，接下來到選擇「Path」，並將C:\\\\hugo\\bin輸入進去。\nStep 3. 打開你的 命令提示字元(cmd) 輸入 hugo --version，並且有出現版本訊息，代表安裝成功。\nLinux 根據你的發行版而定，本篇以Ubuntu作為教學。\nStep 1. 請輸入 sudo apt update \u0026amp;\u0026amp; sudo apt install hugo(此時的 hugo要因你的套件名而定)\nStep 2. 請輸入 hugo --version，並且有出現版本訊息，代表安裝成功。\nMacOS Step 1. 請打開你的終端機\nStep 2. 請輸入 brew install hugo\nStep 3. 請輸入 hugo --version，並且有出現版本訊息，代表安裝成功。\n建立 Github Page Repository Step 1. 首先到你的 Github 主頁，並且在右上角找到「+」，點選「New Repository」\nStep 2. Repository Name 填寫「使用者名稱.github.io」\n匯入主題 Step 1. 先進入此網頁，並選擇你喜歡的主題，按下Download進行下載。\nStep 2. 將下載好的(以hugo-theme-stack.rar為例)壓縮檔解壓下來，將 exampleSite 移動至桌面。\nStep 3. 在 exampleSite 建立一個資料夾為「themes」，並且將剛解壓好的檔案全部丟入裡面。\n開始設定 Step 1. 打開你的終端機，進去 exampleSite。\nStep 2. 輸入 hugo server，此時會建立一個內網網站，將網址放入網頁瀏覽器中，即可以看到畫面。\nStep 3. 通過 vscode或是其他檔案編輯器編輯config.ymal。\n回推上傳至 Github Step 1. 編輯好後，在終端機輸入 hugo，此時會建立所需要的檔案至 public/。\nStep 2. 將剛剛建立好的 Repository Clone下來: git clone https://github.com/使用者名稱/使用者名稱.github.io，此時 git 會建立一個資料夾。\nStep 3. 將 public/裡面所有資料夾和檔案複製到 Clone下來的 使用者名稱.github.io資料夾。\nStep 4. 輸入 git add . \u0026amp;\u0026amp; git commit -m \u0026quot;第一次上傳\u0026quot; \u0026amp;\u0026amp; git push\n網頁上線 此時 Github Action會自動啟動，將你的Github Page 自動上線，網址會是: https://使用者名稱.github.io\n綁定網域 網域設定 在你的網域提供商，建立一個CNAME紀錄，指向使用者名稱.github.io\n以CloudFlare為例，將類型設定為 CNAME，名稱為你需要的網域子域名，目標為Github Page 網址，開不開Proxy其實沒差，IP是Github，不會被駭客發現其他IP。\n設定 Github Page Domain 在 Github Repo 建立一個新的檔案叫做CNAME，並將你的網域放入裡面\n結尾 希望大家看到這裡，透過手把手一步步教學，可以建立出一個 Hugo 靜態網頁。通過 Github Page，可以建立一個個人網頁或是部落格，Github Page的應用很廣，今天我只在 Hugo 講解。因為我也想要來寫寫看部落格，就順手搭建了 Hugo，建立Hugo網頁並沒有想像中的這麼難，反而五分鐘以內就可以搭建完成，剩下的都只是設定和文章內容撰寫而已。如果有任何問題可以來信問我，或是通過我的通訊軟體聯絡我，也可以在下方留言詢問喔，前提是我要看到。\n","date":"2022-10-01T00:00:00Z","permalink":"https://blog.tershi.com/p/hugoinstallation/","title":"五分鐘 Hugo + Github 製作部落格靜態網頁教學"},{"content":"前言 沒錯！我是夏特稀，我在今日創立了部落格，要來將我的生活\u0026amp;人生經歷用一個又一個生動的字敘寫下來，也記錄著我的學習狀態。平常的課堂筆記和課後學習\u0026amp;自主學習的成果和過程都會記錄在這。\n創立部落格初衷 我發現，要學一項技術，甚至是一門學科，短期記憶是可以透過學習累積的，但要轉為長期記憶，需要透過一而再再而三地不斷複習，因此我建立了一個部落格網站，用來記錄著我的學習狀態和學習筆記，寫筆記不僅能讓自己複習，也能讓一個新手快速了解技術，達到知識傳播的目的。\n這裡不僅記錄著我的生活，也記錄著我人生中的每一段時刻和點點滴滴，是人都會老，人老就會遺忘記憶，我們需要將人生點滴和重要時刻記錄下來，以供自己和後世回憶和參考。\n思念是最暖的憂傷像一雙翅膀\n讓我停不了飛不遠在過往遊蕩\n不告而別的你 就算為了我著想\n這麼沉痛的呵護 我怎麼能翱翔\n最暖的憂傷 - 田馥甄\n","date":"2022-10-01T00:00:00Z","permalink":"https://blog.tershi.com/p/thefirstpost/","title":"第一篇貼文"}]